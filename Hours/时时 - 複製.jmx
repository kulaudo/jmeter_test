<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="HOURS" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="注意事項" enabled="false">
        <stringProp name="TestPlan.comments">1.不要同時Enable Backend跟Frontend進行測試.  2.Perfertice-list以及其他全域變數在錄製時Disable  3.執行前先檢查每個Module Controller有沒有跑掉 4.經常備分</stringProp>
      </TestFragmentController>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Perfertice-list-stress" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Total" elementType="Argument">
            <stringProp name="Argument.name">Total</stringProp>
            <stringProp name="Argument.value">200</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Time" elementType="Argument">
            <stringProp name="Argument.name">Time</stringProp>
            <stringProp name="Argument.value">3600</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="F_IP" elementType="Argument">
            <stringProp name="Argument.name">F_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.desc">marksix_frontend_64001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="F_Port" elementType="Argument">
            <stringProp name="Argument.name">F_Port</stringProp>
            <stringProp name="Argument.value">20002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="H5F_IP" elementType="Argument">
            <stringProp name="Argument.name">H5F_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="H5F_Port" elementType="Argument">
            <stringProp name="Argument.name">H5F_Port</stringProp>
            <stringProp name="Argument.value">20002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_IP" elementType="Argument">
            <stringProp name="Argument.name">B_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_Port" elementType="Argument">
            <stringProp name="Argument.name">B_Port</stringProp>
            <stringProp name="Argument.value">20001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_IP" elementType="Argument">
            <stringProp name="Argument.name">P_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_Port" elementType="Argument">
            <stringProp name="Argument.name">P_Port</stringProp>
            <stringProp name="Argument.value">20000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Address" elementType="Argument">
            <stringProp name="Argument.name">Address</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">marksix_frontend_64001</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">20002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Think" elementType="Argument">
            <stringProp name="Argument.name">Think</stringProp>
            <stringProp name="Argument.value">1500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Loop" elementType="Argument">
            <stringProp name="Argument.name">Loop</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Path" elementType="Argument">
            <stringProp name="Argument.name">Path</stringProp>
            <stringProp name="Argument.value">C:\PerformanceTest\Hours\</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">H:\PerformanceTest\Hours\</stringProp>
          </elementProp>
          <elementProp name="ComSafeCode1" elementType="Argument">
            <stringProp name="Argument.name">ComSafeCode1</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemSafeCode1" elementType="Argument">
            <stringProp name="Argument.name">MemSafeCode1</stringProp>
            <stringProp name="Argument.value">654321</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ComSafeCode2" elementType="Argument">
            <stringProp name="Argument.name">ComSafeCode2</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemSafeCode2" elementType="Argument">
            <stringProp name="Argument.name">MemSafeCode2</stringProp>
            <stringProp name="Argument.value">654321</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product" elementType="Argument">
            <stringProp name="Argument.name">product</stringProp>
            <stringProp name="Argument.value">HQ</stringProp>
            <stringProp name="Argument.desc">HQ/WD/HX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="member1" elementType="Argument">
            <stringProp name="Argument.name">member1</stringProp>
            <stringProp name="Argument.value">carl0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pw_member1" elementType="Argument">
            <stringProp name="Argument.name">pw_member1</stringProp>
            <stringProp name="Argument.value">Aa123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="member" elementType="Argument">
            <stringProp name="Argument.name">member</stringProp>
            <stringProp name="Argument.value">carl61</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pw_member" elementType="Argument">
            <stringProp name="Argument.name">pw_member</stringProp>
            <stringProp name="Argument.value">Aa123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">F:frontend B:backend P:platform</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Perfertice-list-qat" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="F_IP" elementType="Argument">
            <stringProp name="Argument.name">F_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="F_Port" elementType="Argument">
            <stringProp name="Argument.name">F_Port</stringProp>
            <stringProp name="Argument.value">64001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="H5F_IP" elementType="Argument">
            <stringProp name="Argument.name">H5F_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.205</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="H5F_Port" elementType="Argument">
            <stringProp name="Argument.name">H5F_Port</stringProp>
            <stringProp name="Argument.value">20002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_IP" elementType="Argument">
            <stringProp name="Argument.name">B_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.108</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_Port" elementType="Argument">
            <stringProp name="Argument.name">B_Port</stringProp>
            <stringProp name="Argument.value">64002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_IP" elementType="Argument">
            <stringProp name="Argument.name">P_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.108</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_Port" elementType="Argument">
            <stringProp name="Argument.name">P_Port</stringProp>
            <stringProp name="Argument.value">64000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Address" elementType="Argument">
            <stringProp name="Argument.name">Address</stringProp>
            <stringProp name="Argument.value">192.168.50.108</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Think" elementType="Argument">
            <stringProp name="Argument.name">Think</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Loop" elementType="Argument">
            <stringProp name="Argument.name">Loop</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Path" elementType="Argument">
            <stringProp name="Argument.name">Path</stringProp>
            <stringProp name="Argument.value">C:\PerformanceTest\Six\data\qat\</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">C:\Six\data\</stringProp>
          </elementProp>
          <elementProp name="Total" elementType="Argument">
            <stringProp name="Argument.name">Total</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Time" elementType="Argument">
            <stringProp name="Argument.name">Time</stringProp>
            <stringProp name="Argument.value">30</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">sec</stringProp>
          </elementProp>
          <elementProp name="ComSafeCode1" elementType="Argument">
            <stringProp name="Argument.name">ComSafeCode1</stringProp>
            <stringProp name="Argument.value">111111</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemSafeCode1" elementType="Argument">
            <stringProp name="Argument.name">MemSafeCode1</stringProp>
            <stringProp name="Argument.value">111112</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ComSafeCode2" elementType="Argument">
            <stringProp name="Argument.name">ComSafeCode2</stringProp>
            <stringProp name="Argument.value">222221</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemSafeCode2" elementType="Argument">
            <stringProp name="Argument.name">MemSafeCode2</stringProp>
            <stringProp name="Argument.value">222222</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product" elementType="Argument">
            <stringProp name="Argument.name">product</stringProp>
            <stringProp name="Argument.value">HQ</stringProp>
            <stringProp name="Argument.desc">HQ/WD/HX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">F:frontend B:backend P:platform</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Perfertice-list-preprd" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="F_IP" elementType="Argument">
            <stringProp name="Argument.name">F_IP</stringProp>
            <stringProp name="Argument.value">dh.p369.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="F_Port" elementType="Argument">
            <stringProp name="Argument.name">F_Port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_IP" elementType="Argument">
            <stringProp name="Argument.name">B_IP</stringProp>
            <stringProp name="Argument.value">dhb.p369.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_Port" elementType="Argument">
            <stringProp name="Argument.name">B_Port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_IP" elementType="Argument">
            <stringProp name="Argument.name">P_IP</stringProp>
            <stringProp name="Argument.value">mg.p369.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_Port" elementType="Argument">
            <stringProp name="Argument.name">P_Port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Address" elementType="Argument">
            <stringProp name="Argument.name">Address</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Think" elementType="Argument">
            <stringProp name="Argument.name">Think</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Loop" elementType="Argument">
            <stringProp name="Argument.name">Loop</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Path" elementType="Argument">
            <stringProp name="Argument.name">Path</stringProp>
            <stringProp name="Argument.value">C:\PerformanceTest\Six\data\preprd\</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Total" elementType="Argument">
            <stringProp name="Argument.name">Total</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Time" elementType="Argument">
            <stringProp name="Argument.name">Time</stringProp>
            <stringProp name="Argument.value">30</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ComSafeCode1" elementType="Argument">
            <stringProp name="Argument.name">ComSafeCode1</stringProp>
            <stringProp name="Argument.value">68688</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemSafeCode1" elementType="Argument">
            <stringProp name="Argument.name">MemSafeCode1</stringProp>
            <stringProp name="Argument.value">66333</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ComSafeCode2" elementType="Argument">
            <stringProp name="Argument.name">ComSafeCode2</stringProp>
            <stringProp name="Argument.value">22999</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MemSafeCode2" elementType="Argument">
            <stringProp name="Argument.name">MemSafeCode2</stringProp>
            <stringProp name="Argument.value">22777</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product" elementType="Argument">
            <stringProp name="Argument.name">product</stringProp>
            <stringProp name="Argument.value">HQ</stringProp>
            <stringProp name="Argument.desc">HQ/WD/HX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">F:frontend B:backend P:platform</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Perfertice-list" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="F_IP" elementType="Argument">
            <stringProp name="Argument.name">F_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.161</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">192.168.50.205</stringProp>
          </elementProp>
          <elementProp name="F_Port" elementType="Argument">
            <stringProp name="Argument.name">F_Port</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">20002</stringProp>
          </elementProp>
          <elementProp name="B_IP" elementType="Argument">
            <stringProp name="Argument.name">B_IP</stringProp>
            <stringProp name="Argument.value">192.168.50.161</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B_Port" elementType="Argument">
            <stringProp name="Argument.name">B_Port</stringProp>
            <stringProp name="Argument.value">20000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Think" elementType="Argument">
            <stringProp name="Argument.name">Think</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Loop" elementType="Argument">
            <stringProp name="Argument.name">Loop</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">500000</stringProp>
          </elementProp>
          <elementProp name="Path" elementType="Argument">
            <stringProp name="Argument.name">Path</stringProp>
            <stringProp name="Argument.value">C:\Hours\</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Total" elementType="Argument">
            <stringProp name="Argument.name">Total</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">1000</stringProp>
          </elementProp>
          <elementProp name="Time" elementType="Argument">
            <stringProp name="Argument.name">Time</stringProp>
            <stringProp name="Argument.value">20000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Delay" elementType="Argument">
            <stringProp name="Argument.name">Delay</stringProp>
            <stringProp name="Argument.value">10.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ismobile" elementType="Argument">
            <stringProp name="Argument.name">ismobile</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">1</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="Thread Group List for Hours" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">40</stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period">10</stringProp>
        <stringProp name="Stop users count">${Total}</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${Time}</stringProp>
        <stringProp name="rampUp">10</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="DATA for LOGIN" enabled="false">
          <stringProp name="filename">${Path}User.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">Account,Password</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="COOKIES DATA_FIEC" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Account" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${Account}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Account</stringProp>
              </elementProp>
              <elementProp name="Password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${Password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Password</stringProp>
              </elementProp>
              <elementProp name="Captcha" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Captcha</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Member/DoLogin</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1106461714">&quot;Status&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">Member/AcceptAgreement</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1106461714">&quot;Status&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="TIMER" enabled="true">
          <stringProp name="ConstantTimer.delay">${Think}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LOOPER" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${Loop}</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HEADERS" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SHELL SAMPLE - 1" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Random;

Random random = new Random();
int i = random.nextInt(10000);

vars.put(&quot;choice&quot;,i.toString());
i = random.nextInt(10000);

vars.put(&quot;GD&quot;,i.toString());
vars.put(&quot;CQ&quot;,i.toString());
vars.put(&quot;BJ&quot;,i.toString());
vars.put(&quot;XY&quot;,i.toString());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-GETSUCCESS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="GUAND" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=1&amp;&amp;${choice}&lt;2500</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东双面" enabled="true">
              <stringProp name="filename">${Path}GD_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东前四" enabled="true">
              <stringProp name="filename">${Path}GD_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东后四" enabled="true">
              <stringProp name="filename">${Path}GD_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东正码" enabled="true">
              <stringProp name="filename">${Path}GD_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东连码" enabled="true">
              <stringProp name="filename">${Path}GD_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东双面" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=0&amp;&amp;${GD}&lt;2000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东前四" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=2000&amp;&amp;${GD}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东前四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东后四" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=4000&amp;&amp;${GD}&lt;6000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东后四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_HS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东正码" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=6000&amp;&amp;${GD}&lt;8000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东正码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_ZM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东连码" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=8000&amp;&amp;${GD}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东连码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_LM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="CONGQ" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=2500&amp;&amp;${choice}&lt;5000</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆整合" enabled="true">
              <stringProp name="filename">${Path}CQ_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆双面" enabled="true">
              <stringProp name="filename">${Path}CQ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆球五" enabled="true">
              <stringProp name="filename">${Path}CQ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投重庆整合" enabled="true">
              <stringProp name="IfController.condition">${CQ}&gt;=0&amp;&amp;${CQ}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重庆整合" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_CQ_ZH}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投重庆双面" enabled="true">
              <stringProp name="IfController.condition">${CQ}&gt;=4000&amp;&amp;${CQ}&lt;7000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重庆双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_CQ_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投重庆球五" enabled="true">
              <stringProp name="IfController.condition">${CQ}&gt;=7000&amp;&amp;${CQ}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重庆球五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_CQ_QW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="BEIJI" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=5000&amp;&amp;${choice}&lt;7500</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京双面" enabled="true">
              <stringProp name="filename">${Path}BJ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前十" enabled="true">
              <stringProp name="filename">${Path}BJ_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前五" enabled="true">
              <stringProp name="filename">${Path}BJ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京后五" enabled="true">
              <stringProp name="filename">${Path}BJ_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京冠亚" enabled="true">
              <stringProp name="filename">${Path}BJ_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京双面" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=0&amp;&amp;${BJ}&lt;2000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京前十" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=2000&amp;&amp;${BJ}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京前十" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京前五" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=4000&amp;&amp;${BJ}&lt;6000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京前五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_QW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京后五" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=6000&amp;&amp;${BJ}&lt;8000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京后五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京冠亚" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=8000&amp;&amp;${BJ}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京冠亚" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_GY}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1385315202">{&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="LUCKY" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=7500&amp;&amp;${choice}&lt;10000</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运双面" enabled="true">
              <stringProp name="filename">${Path}XY_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运前四" enabled="true">
              <stringProp name="filename">${Path}XY_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运后四" enabled="true">
              <stringProp name="filename">${Path}XY_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运正码" enabled="true">
              <stringProp name="filename">${Path}XY_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运连码" enabled="true">
              <stringProp name="filename">${Path}XY_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运双面" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=0&amp;&amp;${XY}&lt;2000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运前四" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=2000&amp;&amp;${XY}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运前四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运后四" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=4000&amp;&amp;${XY}&lt;6000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运后四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_HS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运正码" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=6000&amp;&amp;${XY}&lt;8000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运正码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_ZM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运连码" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=8000&amp;&amp;${XY}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运连码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_LM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="VISIT" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=4950&amp;&amp;${choice}&lt;5050</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-SUMMARY" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Report/GetBetSummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1106461714">&quot;Status&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="TIMER" enabled="true">
            <stringProp name="ConstantTimer.delay">${Think}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>false</label>
              <code>true</code>
              <message>true</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="======================================================" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET google" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET google" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.google.com.tw</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="時時 API" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Navigation/NavigateByTarget" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Navigation/NavigateByTarget" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SafeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${SafeCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">SafeCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Navigation/NavigateByTarget</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Navigation/Speed" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Navigation/Speed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${SafeCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                </elementProp>
                <elementProp name="isbackend" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${isbackend}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">isbackend</stringProp>
                </elementProp>
                <elementProp name="ismobile" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ismobile}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ismobile</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Navigation/Speed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Url/GetUrlList" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Url/GetUrlList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${SafeCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                </elementProp>
                <elementProp name="isbackend" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${isbackend}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">isbackend</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Url/GetUrlList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">newAddr</stringProp>
              <stringProp name="RegexExtractor.regex">(\d{1,3}\.){3,3}(\d{1,3})</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">newPort</stringProp>
              <stringProp name="RegexExtractor.regex">\d{4,5}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Url/GetNetSpeed" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Url/GetNetSpeed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">callback0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Url/GetNetSpeed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Member/Login" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Member/Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${SafeCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/Login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">redirect</stringProp>
              <stringProp name="RegexExtractor.regex">\(S\([^\)]+\)\)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://${F_IP}:${F_Port}/</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
            <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">redirect</stringProp>
              <stringProp name="RegexExtractor.regex">\(S\([^\)]+\)\)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">ERR</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/DoLogin(BackEnd)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/DoLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Account}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Account</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${SafeCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/DoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/DoLogin(FrontEnd)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/DoLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Account}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Account</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${SafeCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/DoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/DoLogin(Stress)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/DoLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Account}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Account</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                </elementProp>
                <elementProp name="Captcha" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Captcha</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Member/DoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/DoLogin(Stress2)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/DoLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Account}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Account</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                </elementProp>
                <elementProp name="Captcha" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Captcha</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/DoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/AcceptAgreement " enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/AcceptAgreement " enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Member/AcceptAgreement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/AcceptAgreement2" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/AcceptAgreement " enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/AcceptAgreement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Member/GetMemberOnline" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Member/GetMemberOnline" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/GetMemberOnline</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Member/GetMemberInfo" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Member/GetMemberInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetMemberInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/App/Index?_=${__time(,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Member/GetMemberBetInfo" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Member/GetMemberBetInfo ${lotteryId} ${playname}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${lotteryId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Member/GetMemberBetInfo" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Member/GetSystemName" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Member/GetSystemName" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetSystemName</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Monitor/GetPageInit" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Monitor/GetPageInit" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                </elementProp>
                <elementProp name="marketTypeIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;4201&quot;,&quot;4002&quot;,&quot;4003&quot;,&quot;4006&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">marketTypeIds</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Monitor/GetPageInit</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /App/Index" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /App/Index" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/App/Index</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer&#x9;http" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /NoticeSetting/GetNoticeData" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /NoticeSetting/GetNoticeData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/NoticeSetting/GetNoticeData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Notice/GetNoticeData" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /NoticeSetting/GetNoticeData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">isLimit</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Notice/GetNoticeData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /OperateLog/GetOddsChangeMarquee" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /OperateLog/GetOddsChangeMarquee" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                </elementProp>
                <elementProp name="marketTypeIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[&quot;4201&quot;,&quot;4002&quot;,&quot;4003&quot;,&quot;4006&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">marketTypeIds</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/OperateLog/GetOddsChangeMarquee</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/${redirect_g0}/Member/Login?_=&amp;token=${SafeCode}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Bet/GetBettingSuccess" enabled="true">
          <stringProp name="TestPlan.comments">最新注單</stringProp>
        </GenericController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Bet/GetBettingSuccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryid</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Bet/GetBetPageInit" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Bet/GetBetPageInit/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                </elementProp>
                <elementProp name="statNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">statNo</stringProp>
                </elementProp>
                <elementProp name="marketTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">[&quot;4002&quot;,&quot;4003&quot;,&quot;4006&quot;,&quot;4012&quot;,&quot;4013&quot;,&quot;4016&quot;,&quot;4017&quot;,&quot;4014&quot;,&quot;4022&quot;,&quot;4023&quot;,&quot;4026&quot;,&quot;4027&quot;,&quot;4024&quot;,&quot;4032&quot;,&quot;4033&quot;,&quot;4036&quot;,&quot;4037&quot;,&quot;4034&quot;,&quot;4042&quot;,&quot;4043&quot;,&quot;4046&quot;,&quot;4047&quot;,&quot;4044&quot;,&quot;4052&quot;,&quot;4053&quot;,&quot;4056&quot;,&quot;4057&quot;,&quot;4062&quot;,&quot;4063&quot;,&quot;4066&quot;,&quot;4067&quot;,&quot;4072&quot;,&quot;4073&quot;,&quot;4076&quot;,&quot;4077&quot;,&quot;4082&quot;,&quot;4083&quot;,&quot;4086&quot;,&quot;4087&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">marketTypes</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${defaultLotteryId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBetPageInit</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GET /Report/GetBetSummary" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /Report/GetBetSummary" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Report/GetBetSummary/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Bet/DoBet" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Bet/DoBet ${playname}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="betParams" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${betParams}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">betParams</stringProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${lotteryId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Bet/DoBet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${Think}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/CreateOrUpdateMember" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/CreateOrUpdateMember" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Data={&quot;MemberId&quot;:&quot;0&quot;,&quot;ParentId&quot;:&quot;4&quot;,&quot;ParentLevel&quot;:&quot;7&quot;,&quot;MemberLevel&quot;:&quot;6&quot;,&quot;HigherHoldRateLimit&quot;:&quot;&quot;,&quot;MoneyType&quot;:&quot;0&quot;,&quot;CreditMax&quot;:&quot;9760036988766&quot;,&quot;MaxHoldRate&quot;:&quot;0&quot;,&quot;Account&quot;:&quot;test_1&quot;,&quot;NickName&quot;:&quot;test_1&quot;,&quot;NewPassword&quot;:&quot;Aa123456&quot;,&quot;ConfirmPassword&quot;:&quot;Aa123456&quot;,&quot;Credit&quot;:&quot;100000000&quot;,&quot;Status&quot;:&quot;0&quot;,&quot;IsAllowSell&quot;:&quot;1&quot;,&quot;IsAllowMultipleBet&quot;:&quot;1&quot;,&quot;IsAllowViewSummary&quot;:&quot;0&quot;,&quot;IsAllowViewDetail&quot;:&quot;0&quot;,&quot;ParentEarnWaterRate&quot;:&quot;0&quot;,&quot;IsAllowSkipHold&quot;:&quot;0&quot;,&quot;IsAllowMaxHold&quot;:&quot;0&quot;,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:true,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:true,&quot;HandicapId&quot;:1,&quot;HandicapName&quot;:&quot;A&quot;,&quot;ShowOrder&quot;:1},{&quot;IsChecked&quot;:true,&quot;HandicapId&quot;:2,&quot;HandicapName&quot;:&quot;B&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:true,&quot;HandicapId&quot;:3,&quot;HandicapName&quot;:&quot;C&quot;,&quot;ShowOrder&quot;:3}],&quot;PackageId&quot;:1,&quot;PackageName&quot;:&quot;套1&quot;,&quot;ShowOrder&quot;:1,&quot;IsFristActive&quot;:true},{&quot;IsChecked&quot;:false,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:1,&quot;HandicapName&quot;:&quot;A&quot;,&quot;ShowOrder&quot;:1},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:2,&quot;HandicapName&quot;:&quot;B&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:3,&quot;HandicapName&quot;:&quot;C&quot;,&quot;ShowOrder&quot;:3}],&quot;PackageId&quot;:2,&quot;PackageName&quot;:&quot;套2&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:false,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:1,&quot;HandicapName&quot;:&quot;A&quot;,&quot;ShowOrder&quot;:1},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:2,&quot;HandicapName&quot;:&quot;B&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:3,&quot;HandicapName&quot;:&quot;C&quot;,&quot;ShowOrder&quot;:3}],&quot;PackageId&quot;:3,&quot;PackageName&quot;:&quot;套3&quot;,&quot;ShowOrder&quot;:3}],&quot;BetSettingBases&quot;:[{&quot;SequenceId&quot;:1,&quot;OneItemMax&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:500000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;1&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;1&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;1&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:1,&quot;WaterL&quot;:{&quot;1&quot;:[1.71,2.71,3.71],&quot;2&quot;:[0.72,1.72,2.72],&quot;3&quot;:[0.71,1.71,2.71]}},{&quot;SequenceId&quot;:2,&quot;OneItemMax&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:500000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;2&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;2&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;2&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:2,&quot;WaterL&quot;:{&quot;1&quot;:[1.71,2.71,3.71],&quot;2&quot;:[0.72,1.72,2.72],&quot;3&quot;:[0.71,1.71,2.71]}},{&quot;SequenceId&quot;:3,&quot;OneItemMax&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:50000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;3&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;3&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;3&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:3,&quot;WaterL&quot;:{&quot;1&quot;:[6,6,6],&quot;2&quot;:[6,6,6],&quot;3&quot;:[6,6,6]}},{&quot;SequenceId&quot;:4,&quot;OneItemMax&quot;:1000000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:500000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;4&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;4&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;4&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:4,&quot;WaterL&quot;:{&quot;1&quot;:[1.4,1.4,1.4],&quot;2&quot;:[0.72,0.72,0.72],&quot;3&quot;:[0.7,0.7,0.7]}}],&quot;LotteryBets&quot;:[{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1015,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1015&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1015&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1015&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1125,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1125&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1125&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1125&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1126,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1126&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1126&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1126&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1127,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1127&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1127&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1127&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1128,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1128&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1128&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1128&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1129,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1129&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1129&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1129&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2001,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2001&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2001&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2001&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2002,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2003,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2003&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2003&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2003&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3002,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.82&quot;,&quot;WaterRateLimit&quot;:&quot;1.82&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.82&quot;,&quot;WaterRateLimit&quot;:&quot;2.82&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.82&quot;,&quot;WaterRateLimit&quot;:&quot;3.82&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3018,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3019,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3201,&quot;OneItemMax&quot;:1000000000,&quot;OneItemMaxLimit&quot;:1000000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3310,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3320,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3330,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3340,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3350,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3360,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4002,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4018,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4019,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;1.4&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;1.4&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;1.4&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4201,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4310,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4320,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4330,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4340,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4350,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4360,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;7&quot;,&quot;WaterRateLimit&quot;:&quot;7&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;7&quot;,&quot;WaterRateLimit&quot;:&quot;7&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;7&quot;,&quot;WaterRateLimit&quot;:&quot;7&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3}],&quot;Holds&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/CreateOrUpdateMember</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Referer&#x9;http" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/App/Index</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Dummy Sampler" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="======================================================" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 後台 Login" enabled="true">
        <stringProp name="TestPlan.comments">導航頁開始到登入成功進入後台頁面</stringProp>
      </TestFragmentController>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Navigation/NavigateByTarget" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-209198619">POST /Navigation/NavigateByTarget</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Navigation/Speed" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1611645871">GET /Navigation/Speed</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Url/GetUrlList" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1556724644">GET /Url/GetUrlList</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Url/GetNetSpeed" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1254452443">GET /Url/GetNetSpeed</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Member/Login" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1615358457">GET /Member/Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Member/DoLogin" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1171502565">POST /Member/DoLogin(BackEnd)</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /App/Index" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="2067384063">GET /App/Index</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Member/GetMemberOnline" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1741985133">GET /Member/GetMemberOnline</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /NoticeSetting/GetNoticeData/" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="2060730364">GET /NoticeSetting/GetNoticeData</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /OperateLog/GetOddsChangeMarquee/" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1468625922">GET /OperateLog/GetOddsChangeMarquee</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${B_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${B_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">999994</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">carl1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-TW,zh;q=0.9,zh-CN;q=0.8</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 後台 create account" enabled="true">
        <stringProp name="TestPlan.comments">導航頁開始到登入成功進入後台頁面</stringProp>
      </TestFragmentController>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${B_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${B_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">999994</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">carl1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-TW,zh;q=0.9,zh-CN;q=0.8</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="POST /Member/CreateOrUpdateMember" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /Member/CreateOrUpdateMember" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Data={&quot;MemberId&quot;:&quot;0&quot;,&quot;ParentId&quot;:&quot;4&quot;,&quot;ParentLevel&quot;:&quot;7&quot;,&quot;MemberLevel&quot;:&quot;6&quot;,&quot;HigherHoldRateLimit&quot;:&quot;&quot;,&quot;MoneyType&quot;:&quot;0&quot;,&quot;CreditMax&quot;:&quot;9760036988766&quot;,&quot;MaxHoldRate&quot;:&quot;0&quot;,&quot;Account&quot;:&quot;test_1&quot;,&quot;NickName&quot;:&quot;test_1&quot;,&quot;NewPassword&quot;:&quot;Aa123456&quot;,&quot;ConfirmPassword&quot;:&quot;Aa123456&quot;,&quot;Credit&quot;:&quot;100000000&quot;,&quot;Status&quot;:&quot;0&quot;,&quot;IsAllowSell&quot;:&quot;1&quot;,&quot;IsAllowMultipleBet&quot;:&quot;1&quot;,&quot;IsAllowViewSummary&quot;:&quot;0&quot;,&quot;IsAllowViewDetail&quot;:&quot;0&quot;,&quot;ParentEarnWaterRate&quot;:&quot;0&quot;,&quot;IsAllowSkipHold&quot;:&quot;0&quot;,&quot;IsAllowMaxHold&quot;:&quot;0&quot;,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:true,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:true,&quot;HandicapId&quot;:1,&quot;HandicapName&quot;:&quot;A&quot;,&quot;ShowOrder&quot;:1},{&quot;IsChecked&quot;:true,&quot;HandicapId&quot;:2,&quot;HandicapName&quot;:&quot;B&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:true,&quot;HandicapId&quot;:3,&quot;HandicapName&quot;:&quot;C&quot;,&quot;ShowOrder&quot;:3}],&quot;PackageId&quot;:1,&quot;PackageName&quot;:&quot;套1&quot;,&quot;ShowOrder&quot;:1,&quot;IsFristActive&quot;:true},{&quot;IsChecked&quot;:false,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:1,&quot;HandicapName&quot;:&quot;A&quot;,&quot;ShowOrder&quot;:1},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:2,&quot;HandicapName&quot;:&quot;B&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:3,&quot;HandicapName&quot;:&quot;C&quot;,&quot;ShowOrder&quot;:3}],&quot;PackageId&quot;:2,&quot;PackageName&quot;:&quot;套2&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:false,&quot;Handicaps&quot;:[{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:1,&quot;HandicapName&quot;:&quot;A&quot;,&quot;ShowOrder&quot;:1},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:2,&quot;HandicapName&quot;:&quot;B&quot;,&quot;ShowOrder&quot;:2},{&quot;IsChecked&quot;:false,&quot;HandicapId&quot;:3,&quot;HandicapName&quot;:&quot;C&quot;,&quot;ShowOrder&quot;:3}],&quot;PackageId&quot;:3,&quot;PackageName&quot;:&quot;套3&quot;,&quot;ShowOrder&quot;:3}],&quot;BetSettingBases&quot;:[{&quot;SequenceId&quot;:1,&quot;OneItemMax&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:500000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;1&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;1&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;1&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:1,&quot;WaterL&quot;:{&quot;1&quot;:[1.71,2.71,3.71],&quot;2&quot;:[0.72,1.72,2.72],&quot;3&quot;:[0.71,1.71,2.71]}},{&quot;SequenceId&quot;:2,&quot;OneItemMax&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:500000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;2&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;2&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;2&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:2,&quot;WaterL&quot;:{&quot;1&quot;:[1.71,2.71,3.71],&quot;2&quot;:[0.72,1.72,2.72],&quot;3&quot;:[0.71,1.71,2.71]}},{&quot;SequenceId&quot;:3,&quot;OneItemMax&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:50000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;3&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;3&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;3&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:3,&quot;WaterL&quot;:{&quot;1&quot;:[6,6,6],&quot;2&quot;:[6,6,6],&quot;3&quot;:[6,6,6]}},{&quot;SequenceId&quot;:4,&quot;OneItemMax&quot;:1000000000,&quot;OneBetMin&quot;:2,&quot;OneBetMax&quot;:500000,&quot;WaterList&quot;:[{&quot;SequenceId&quot;:&quot;4&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;4&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;2&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;},{&quot;SequenceId&quot;:&quot;4&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;HandicapId&quot;:&quot;3&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;&quot;}],&quot;sequenceId&quot;:4,&quot;WaterL&quot;:{&quot;1&quot;:[1.4,1.4,1.4],&quot;2&quot;:[0.72,0.72,0.72],&quot;3&quot;:[0.7,0.7,0.7]}}],&quot;LotteryBets&quot;:[{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1015,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1015&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1015&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1015&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1125,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1125&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1125&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1125&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1126,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1126&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1126&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1126&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1127,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1127&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1127&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1127&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1128,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1128&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1128&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1128&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:1,&quot;MarketCategoryId&quot;:1129,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:500000,&quot;OneBetMaxLimit&quot;:500000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1129&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1129&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;1&quot;,&quot;MarketCategoryId&quot;:&quot;1129&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2001,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2001&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2001&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2001&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2002,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2003,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2003&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2003&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2003&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:2,&quot;MarketCategoryId&quot;:2014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;2&quot;,&quot;MarketCategoryId&quot;:&quot;2014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3002,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.82&quot;,&quot;WaterRateLimit&quot;:&quot;1.82&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.82&quot;,&quot;WaterRateLimit&quot;:&quot;2.82&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.82&quot;,&quot;WaterRateLimit&quot;:&quot;3.82&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3018,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3019,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3201,&quot;OneItemMax&quot;:1000000000,&quot;OneItemMaxLimit&quot;:1000000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3310,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3320,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3330,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3340,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3350,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:3,&quot;MarketCategoryId&quot;:3360,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;3&quot;,&quot;MarketCategoryId&quot;:&quot;3360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6.1&quot;,&quot;WaterRateLimit&quot;:&quot;6.1&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4002,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4002&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4011,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4011&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:1},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4012,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4012&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4014,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;2.71&quot;,&quot;WaterRateLimit&quot;:&quot;2.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4014&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;3.71&quot;,&quot;WaterRateLimit&quot;:&quot;3.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:2},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4018,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4018&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4019,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;1.4&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;1.4&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4019&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.4&quot;,&quot;WaterRateLimit&quot;:&quot;1.4&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4201,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4201&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;1.71&quot;,&quot;WaterRateLimit&quot;:&quot;1.71&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:4},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4310,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4310&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4320,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4320&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4330,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4330&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4340,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4340&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4350,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4350&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;6&quot;,&quot;WaterRateLimit&quot;:&quot;6&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3},{&quot;LotteryId&quot;:4,&quot;MarketCategoryId&quot;:4360,&quot;OneItemMax&quot;:1000000,&quot;OneItemMaxLimit&quot;:1000000,&quot;OneBetMin&quot;:2,&quot;OneBetMinLimit&quot;:2,&quot;OneBetMax&quot;:50000,&quot;OneBetMaxLimit&quot;:50000,&quot;WaterList&quot;:[{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;7&quot;,&quot;WaterRateLimit&quot;:&quot;7&quot;,&quot;HandicapId&quot;:&quot;1&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;7&quot;,&quot;WaterRateLimit&quot;:&quot;7&quot;,&quot;HandicapId&quot;:&quot;2&quot;},{&quot;LotteryId&quot;:&quot;4&quot;,&quot;MarketCategoryId&quot;:&quot;4360&quot;,&quot;PackageId&quot;:&quot;1&quot;,&quot;WaterRate&quot;:&quot;7&quot;,&quot;WaterRateLimit&quot;:&quot;7&quot;,&quot;HandicapId&quot;:&quot;3&quot;}],&quot;sequenceId&quot;:3}],&quot;Holds&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${newAddr_g0}</stringProp>
            <stringProp name="HTTPSampler.port">${newPort_g0}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${redirect_g0}/Member/CreateOrUpdateMember</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Referer&#x9;http" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${newAddr_g0}:${newPort_g0}/App/Index</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="======================================================" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 Login" enabled="true">
        <stringProp name="TestPlan.comments">導航頁開始到登入成功進入前台頁面</stringProp>
      </TestFragmentController>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Navigation/NavigateByTarget" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-209198619">POST /Navigation/NavigateByTarget</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Navigation/Speed" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1611645871">GET /Navigation/Speed</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Url/GetUrlList" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1556724644">GET /Url/GetUrlList</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Url/GetNetSpeed" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1254452443">GET /Url/GetNetSpeed</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Member/Login" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1615358457">GET /Member/Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Member/DoLogin" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="773187783">POST /Member/DoLogin(FrontEnd)</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Member/GetSystemName" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="806769632">GET /Member/GetSystemName</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /NoticeSetting/GetNoticeData" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-272877338">GET /Notice/GetNoticeData</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Member/AcceptAgreement " enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-318066748">POST /Member/AcceptAgreement </stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Member/GetMemberInfo" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1177409298">GET /Member/GetMemberInfo</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Bet/GetBetPageInit/" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="1228355261">GET /Bet/GetBetPageInit</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Bet/GetBettingSuccess" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-1124695529">GET /Bet/GetBettingSuccess</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">123123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">kcard7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="defaultLotteryId" elementType="Argument">
              <stringProp name="Argument.name">defaultLotteryId</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1=重慶 2=北京 3=幸運 4=廣東</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 stress Login" enabled="true">
        <stringProp name="TestPlan.comments">導航頁開始到登入成功進入前台頁面</stringProp>
      </TestFragmentController>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Get /" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="67707333">GET /</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Member/DoLogin" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="842477723">POST /Member/DoLogin(Stress2)</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="POST /Member/AcceptAgreement " enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="-318066730">POST /Member/AcceptAgreement2</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="DATA for LOGIN" enabled="true">
          <stringProp name="filename">${Path}压测会员数据.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">No,Account</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="DATA for LOGIN" enabled="false">
          <stringProp name="filename">${Path}User.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">Account,Password</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 投注1" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">123123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">kcard7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="defaultLotteryId" elementType="Argument">
              <stringProp name="Argument.name">defaultLotteryId</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1=重慶 2=北京 3=幸運 4=廣東</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller 投注Ver1" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${Loop}</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HEADERS" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="SHELL SAMPLE - 1" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Random;

Random random = new Random();

int i = random.nextInt(12500);
vars.put(&quot;choice&quot;,i.toString());

i = random.nextInt(12500);

vars.put(&quot;GD&quot;,i.toString());
vars.put(&quot;CQ&quot;,i.toString());
vars.put(&quot;BJ&quot;,i.toString());
vars.put(&quot;XY&quot;,i.toString());
vars.put(&quot;JS&quot;,i.toString());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-GETSUCCESS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="GUAND" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=1&amp;&amp;${choice}&lt;2500</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东双面" enabled="true">
              <stringProp name="filename">${Path}GD_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东前四" enabled="true">
              <stringProp name="filename">${Path}GD_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东后四" enabled="true">
              <stringProp name="filename">${Path}GD_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东正码" enabled="true">
              <stringProp name="filename">${Path}GD_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东连码" enabled="true">
              <stringProp name="filename">${Path}GD_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东双面" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=0&amp;&amp;${GD}&lt;2000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东前四" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=2000&amp;&amp;${GD}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东前四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东后四" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=4000&amp;&amp;${GD}&lt;6000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东后四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_HS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东正码" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=6000&amp;&amp;${GD}&lt;8000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东正码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_ZM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投广东连码" enabled="true">
              <stringProp name="IfController.condition">${GD}&gt;=8000&amp;&amp;${GD}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广东连码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_GD_LM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="CONGQ" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=2500&amp;&amp;${choice}&lt;5000</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆整合" enabled="true">
              <stringProp name="filename">${Path}CQ_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆双面" enabled="true">
              <stringProp name="filename">${Path}CQ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆球五" enabled="true">
              <stringProp name="filename">${Path}CQ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投重庆整合" enabled="true">
              <stringProp name="IfController.condition">${CQ}&gt;=0&amp;&amp;${CQ}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重庆整合" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_CQ_ZH}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投重庆双面" enabled="true">
              <stringProp name="IfController.condition">${CQ}&gt;=4000&amp;&amp;${CQ}&lt;7000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重庆双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_CQ_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投重庆球五" enabled="true">
              <stringProp name="IfController.condition">${CQ}&gt;=7000&amp;&amp;${CQ}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重庆球五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_CQ_QW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="BEIJI" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=5000&amp;&amp;${choice}&lt;7500</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京双面" enabled="true">
              <stringProp name="filename">${Path}BJ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前十" enabled="true">
              <stringProp name="filename">${Path}BJ_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前五" enabled="true">
              <stringProp name="filename">${Path}BJ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京后五" enabled="true">
              <stringProp name="filename">${Path}BJ_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京冠亚" enabled="true">
              <stringProp name="filename">${Path}BJ_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京双面" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=0&amp;&amp;${BJ}&lt;2000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京前十" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=2000&amp;&amp;${BJ}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京前十" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京前五" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=4000&amp;&amp;${BJ}&lt;6000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京前五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_QW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京后五" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=6000&amp;&amp;${BJ}&lt;8000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京后五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投北京冠亚" enabled="true">
              <stringProp name="IfController.condition">${BJ}&gt;=8000&amp;&amp;${BJ}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="北京冠亚" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_BJ_GY}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1385315202">{&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="LUCKY" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=7500&amp;&amp;${choice}&lt;10000</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运双面" enabled="true">
              <stringProp name="filename">${Path}XY_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运前四" enabled="true">
              <stringProp name="filename">${Path}XY_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运后四" enabled="true">
              <stringProp name="filename">${Path}XY_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运正码" enabled="true">
              <stringProp name="filename">${Path}XY_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运连码" enabled="true">
              <stringProp name="filename">${Path}XY_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运双面" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=0&amp;&amp;${XY}&lt;2000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运前四" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=2000&amp;&amp;${XY}&lt;4000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运前四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运后四" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=4000&amp;&amp;${XY}&lt;6000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运后四" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_HS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运正码" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=6000&amp;&amp;${XY}&lt;8000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运正码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_ZM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投幸运连码" enabled="true">
              <stringProp name="IfController.condition">${XY}&gt;=8000&amp;&amp;${XY}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="幸运连码" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_XY_LM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="急速" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=10000&amp;&amp;${choice}&lt;12500</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 急速双面" enabled="true">
              <stringProp name="filename">${Path}JS_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JS_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 急速前十" enabled="true">
              <stringProp name="filename">${Path}JS_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JS_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 急速前五" enabled="true">
              <stringProp name="filename">${Path}JS_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JS_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 急速后五" enabled="true">
              <stringProp name="filename">${Path}JS_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JS_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 急速冠亚" enabled="true">
              <stringProp name="filename">${Path}JS_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JS_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投急速双面" enabled="true">
              <stringProp name="IfController.condition">${JS}&gt;=0&amp;&amp;${JS}&lt;2500</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="急速双面" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_JS_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投急速前十" enabled="true">
              <stringProp name="IfController.condition">${JS}&gt;=2500&amp;&amp;${JS}&lt;5000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="急速前十" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_JS_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投急速前五" enabled="true">
              <stringProp name="IfController.condition">${JS}&gt;=5000&amp;&amp;${JS}&lt;7500</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="急速前五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_JS_QW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投急速后五" enabled="true">
              <stringProp name="IfController.condition">${JS}&gt;=7500&amp;&amp;${JS}&lt;10000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="急速后五" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_JS_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="选投急速冠亚" enabled="true">
              <stringProp name="IfController.condition">${JS}&gt;=10000&amp;&amp;${JS}&lt;12500</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="急速冠亚" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${bet_data_JS_GY}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">betParams</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lotteryId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-MEMBER" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Member/GetMemberBetInfo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1385315202">{&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="VISIT" enabled="true">
            <stringProp name="IfController.condition">${choice}&gt;=4950&amp;&amp;${choice}&lt;5050</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP-SUMMARY" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="lotteryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lotteryId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Report/GetBetSummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1106461714">&quot;Status&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="TIMER" enabled="true">
            <stringProp name="ConstantTimer.delay">${Think}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller 投注Ver2" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="bzm - Weighted Switch Controller" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-1775299105">
                <stringProp name="786643">幸運</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1566967837">
                <stringProp name="679541">北京</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="923932636">
                <stringProp name="757210335">幸運飛艇</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1970002053">
                <stringProp name="1021193511">英國賽車</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="783780420">
                <stringProp name="631021909">極速賽車75</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1756371438">
                <stringProp name="1182025">重慶</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1534978041">
                <stringProp name="1020875770">英國時時</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1121286861">
                <stringProp name="325672808">極速時時75</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1415805872">
                <stringProp name="779502">廣東</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1458529124">
                <stringProp name="1020826417">英國快樂</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="幸運" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="440537512">
                  <stringProp name="757018171">幸运连码</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1677618243">
                  <stringProp name="756728662">幸运正码</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="757107568">
                  <stringProp name="756535013">幸运后四</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1962427075">
                  <stringProp name="756521094">幸运前四</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-664435350">
                  <stringProp name="756549486">幸运双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运连码" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XY_LM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸运连码</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运正码" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XY_ZM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸运正码</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运后四" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XY_HS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸运后四</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运前四" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XY_QS}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸运前四</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XY_SM}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸运双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="北京" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-1047065119">
                  <stringProp name="653706799">北京冠亚</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-19316630">
                  <stringProp name="653726075">北京后五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1579263630">
                  <stringProp name="653712156">北京前五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1587040879">
                  <stringProp name="653713353">北京前十</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1509234693">
                  <stringProp name="653742667">北京双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1532271758">
                  <stringProp name="653996591">北京番攤</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京冠亚" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_GY}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京冠亚</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京后五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京后五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京前五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京前五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京前十" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_QS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京前十</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="北京番攤" enabled="true">
                <boolProp name="IsRandomChoice">false</boolProp>
                <collectionProp name="Weights">
                  <collectionProp name="-427324796">
                    <stringProp name="30058">番</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="58167282">
                    <stringProp name="27491">正</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="309998098">
                    <stringProp name="684825">兩面</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="1203492635">
                    <stringProp name="24565">念</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="650555120">
                    <stringProp name="35282">角</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="1080537277">
                    <stringProp name="20013">中</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
              </com.blazemeter.jmeter.control.WeightedSwitchController>
              <hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="番" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_BJ_FT_F}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">北京番攤-番</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="正" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_BJ_FT_Z}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">北京番攤-正</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="兩面" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_BJ_FT_T}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">北京番攤-兩面</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="念" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_BJ_FT_N}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">北京番攤-念</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="角" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_BJ_FT_JW}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">北京番攤-角</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="中" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_BJ_FT_J}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">北京番攤-中</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="幸運飛艇" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-460079509">
                  <stringProp name="1830326809">幸運飛艇冠亚</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="544521373">
                  <stringProp name="1830346085">幸運飛艇后五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="2143101633">
                  <stringProp name="1830332166">幸運飛艇前五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1023202876">
                  <stringProp name="1830333363">幸運飛艇前十</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="2073072696">
                  <stringProp name="1830362677">幸運飛艇双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇冠亚" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XYFT_GY}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸運飛艇冠亚</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇后五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XYFT_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸運飛艇后五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇前五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XYFT_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸運飛艇前五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇前十" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XYFT_QS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸運飛艇前十</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_XYFT_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">幸運飛艇双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國賽車" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-387176275">
                  <stringProp name="2115088481">英國賽車冠亚</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1977124819">
                  <stringProp name="2115107757">英國賽車后五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1520829960">
                  <stringProp name="2115093838">英國賽車前五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-927898732">
                  <stringProp name="2115095035">英國賽車前十</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="269002321">
                  <stringProp name="2115124349">英國賽車双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車冠亚" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSBJ_GY}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國賽車冠亚</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車后五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSBJ_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國賽車后五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車前五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSBJ_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國賽車前五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車前十" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSBJ_QS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國賽車前十</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSBJ_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國賽車双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="極速賽車75" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="1352491847">
                  <stringProp name="822333711">極速賽車75冠亚</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1638770215">
                  <stringProp name="822352987">極速賽車75后五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1110054851">
                  <stringProp name="822339068">極速賽車75前五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="788621783">
                  <stringProp name="822340265">極速賽車75前十</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1180083788">
                  <stringProp name="822369579">極速賽車75双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75冠亚" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSC75_GY}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速賽車75冠亚</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75后五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSC75_HW}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速賽車75后五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75前五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSC75_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速賽車75前五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75前十" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSC75_QS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速賽車75前十</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSC75_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速賽車75双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="重慶" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="953612766">
                  <stringProp name="1136144138">重庆球五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="32100418">
                  <stringProp name="1135907119">重庆双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="815053256">
                  <stringProp name="1136029997">重庆整合</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-990460131">
                  <stringProp name="1136161043">重庆番攤</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆球五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆球五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆整合" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_ZH}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆整合</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="重庆番攤" enabled="true">
                <boolProp name="IsRandomChoice">false</boolProp>
                <collectionProp name="Weights">
                  <collectionProp name="-427324796">
                    <stringProp name="30058">番</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="58167282">
                    <stringProp name="27491">正</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="309998098">
                    <stringProp name="684825">兩面</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="1203492635">
                    <stringProp name="24565">念</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="650555120">
                    <stringProp name="35282">角</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <collectionProp name="1080537277">
                    <stringProp name="20013">中</stringProp>
                    <stringProp name="48625">100</stringProp>
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                </collectionProp>
              </com.blazemeter.jmeter.control.WeightedSwitchController>
              <hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="番" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_CQ_FT_F}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">重庆番攤-番</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="正" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_CQ_FT_Z}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">重庆番攤-正</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="兩面" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_CQ_FT_T}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">重庆番攤-兩面</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="念" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_CQ_FT_N}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">重庆番攤-念</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="角" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_CQ_FT_JW}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">重庆番攤-角</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="中" enabled="true">
                  <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="betParams" elementType="Argument">
                        <stringProp name="Argument.name">betParams</stringProp>
                        <stringProp name="Argument.value">${bet_data_CQ_FT_J}</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="lotteryId" elementType="Argument">
                        <stringProp name="Argument.name">lotteryId</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.desc">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="playname" elementType="Argument">
                        <stringProp name="Argument.name">playname</stringProp>
                        <stringProp name="Argument.value">重庆番攤-中</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </kg.apc.jmeter.control.ParameterizedController>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="764597751">Test Plan</stringProp>
                      <stringProp name="68931311">HOURS</stringProp>
                      <stringProp name="536752666">時時 API</stringProp>
                      <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                      <stringProp name="Scope.variable">mymy</stringProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國時時" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="57669375">
                  <stringProp name="1810012267">英國時時球五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="973343505">
                  <stringProp name="1809775248">英國時時双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1248087712">
                  <stringProp name="1809898126">英國時時整合</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時球五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSCQ_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國時時球五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSCQ_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國時時双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時整合" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSCQ_ZH}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國時時整合</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="極速時時75" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-645639244">
                  <stringProp name="-560103335">極速時時75球五</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1428609469">
                  <stringProp name="-560340354">極速時時75双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="2057771289">
                  <stringProp name="-560217476">極速時時75整合</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75球五" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSSC75_QW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速時時75球五</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSSC75_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速時時75双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75整合" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSSSC75_ZH}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">極速時時75整合</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="廣東" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="1882106946">
                  <stringProp name="741062688">广东连码</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-458203802">
                  <stringProp name="740773179">广东正码</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1429409852">
                  <stringProp name="740579530">广东后四</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1266977184">
                  <stringProp name="740565611">广东前四</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1518604205">
                  <stringProp name="740594003">广东双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东连码" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_GD_LM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">广东连码</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东正码" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_GD_ZM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">广东正码</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东后四" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_GD_HS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">广东后四</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东前四" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_GD_QS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">广东前四</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_GD_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">广东双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國快樂" enabled="true">
              <boolProp name="IsRandomChoice">true</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="928836433">
                  <stringProp name="1762815700">英國快樂连码</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-185689867">
                  <stringProp name="1762526191">英國快樂正码</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-1823776359">
                  <stringProp name="1762332542">英國快樂后四</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="-995209946">
                  <stringProp name="1762318623">英國快樂前四</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1790371443">
                  <stringProp name="1762347015">英國快樂双面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂连码" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSGD_LM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國快樂连码</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂正码" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSGD_ZM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國快樂正码</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂后四" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSGD_HS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國快樂后四</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂前四" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSGD_QS}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國快樂前四</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂双面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_JSGD_SM}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">英國快樂双面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运双面" enabled="true">
              <stringProp name="filename">${Path}XY_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运前四" enabled="true">
              <stringProp name="filename">${Path}XY_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运后四" enabled="true">
              <stringProp name="filename">${Path}XY_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运正码" enabled="true">
              <stringProp name="filename">${Path}XY_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运连码" enabled="true">
              <stringProp name="filename">${Path}XY_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆整合" enabled="true">
              <stringProp name="filename">${Path}CQ_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆双面" enabled="true">
              <stringProp name="filename">${Path}CQ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆球五" enabled="true">
              <stringProp name="filename">${Path}CQ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-番" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_F.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_F</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-正" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_Z.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_Z</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-兩面" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_T.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_T</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-念" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_N.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_N</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-角" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_JW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_JW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-中" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_J.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_J</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時球五" enabled="true">
              <stringProp name="filename">${Path}JSCQ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSCQ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時双面" enabled="true">
              <stringProp name="filename">${Path}JSCQ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSCQ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時整合" enabled="true">
              <stringProp name="filename">${Path}JSCQ_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSCQ_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75整合" enabled="true">
              <stringProp name="filename">${Path}JSSSC75_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSSC75_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75双面" enabled="true">
              <stringProp name="filename">${Path}JSSSC75_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSSC75_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75球五" enabled="true">
              <stringProp name="filename">${Path}JSSSC75_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSSC75_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东双面" enabled="true">
              <stringProp name="filename">${Path}GD_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东前四" enabled="true">
              <stringProp name="filename">${Path}GD_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东后四" enabled="true">
              <stringProp name="filename">${Path}GD_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东正码" enabled="true">
              <stringProp name="filename">${Path}GD_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东连码" enabled="true">
              <stringProp name="filename">${Path}GD_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂连码" enabled="true">
              <stringProp name="filename">${Path}JSGD_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂正码" enabled="true">
              <stringProp name="filename">${Path}JSGD_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂后四" enabled="true">
              <stringProp name="filename">${Path}JSGD_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂前四" enabled="true">
              <stringProp name="filename">${Path}JSGD_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂双面" enabled="true">
              <stringProp name="filename">${Path}JSGD_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京双面" enabled="true">
              <stringProp name="filename">${Path}BJ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前十" enabled="true">
              <stringProp name="filename">${Path}BJ_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前五" enabled="true">
              <stringProp name="filename">${Path}BJ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京后五" enabled="true">
              <stringProp name="filename">${Path}BJ_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京冠亚" enabled="true">
              <stringProp name="filename">${Path}BJ_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇冠亚" enabled="true">
              <stringProp name="filename">${Path}XYFT_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XYFT_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇后五" enabled="true">
              <stringProp name="filename">${Path}XYFT_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XYFT_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇前五" enabled="true">
              <stringProp name="filename">${Path}XYFT_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XYFT_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇前十" enabled="true">
              <stringProp name="filename">${Path}XYFT_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XYFT_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇双面" enabled="true">
              <stringProp name="filename">${Path}XYFT_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XYFT_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車冠亚" enabled="true">
              <stringProp name="filename">${Path}JSBJ_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSBJ_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車后五" enabled="true">
              <stringProp name="filename">${Path}JSBJ_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSBJ_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車前五" enabled="true">
              <stringProp name="filename">${Path}JSBJ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSBJ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車前十" enabled="true">
              <stringProp name="filename">${Path}JSBJ_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSBJ_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車双面" enabled="true">
              <stringProp name="filename">${Path}JSBJ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSBJ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75双面" enabled="true">
              <stringProp name="filename">${Path}JSSC75_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSC75_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75前十" enabled="true">
              <stringProp name="filename">${Path}JSSC75_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSC75_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75前五" enabled="true">
              <stringProp name="filename">${Path}JSSC75_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSC75_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75后五" enabled="true">
              <stringProp name="filename">${Path}JSSC75_HW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSC75_HW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75冠亚" enabled="true">
              <stringProp name="filename">${Path}JSSC75_GY.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSC75_GY</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-番" enabled="true">
              <stringProp name="filename">${Path}BJ_FT_F.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_FT_F</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-正" enabled="true">
              <stringProp name="filename">${Path}BJ_FT_Z.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_FT_Z</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-兩面" enabled="true">
              <stringProp name="filename">${Path}BJ_FT_T.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_FT_T</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-念" enabled="true">
              <stringProp name="filename">${Path}BJ_FT_N.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_FT_N</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-角" enabled="true">
              <stringProp name="filename">${Path}BJ_FT_JW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_FT_JW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-中" enabled="true">
              <stringProp name="filename">${Path}BJ_FT_J.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_BJ_FT_J</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="536752666">時時 API</stringProp>
              <stringProp name="-1365804897">GET /Member/GetMemberBetInfo</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="jp@gc - Parameterized Controller 查看帳戶歷史" enabled="false">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="lotteryId" elementType="Argument">
                <stringProp name="Argument.name">lotteryId</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="536752666">時時 API</stringProp>
              <stringProp name="671778165">GET /Report/GetBetSummary</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="幸运農場" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="幸运" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运農場连码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_LM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运農場连码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运農場正码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_ZM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运農場正码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运農場后四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_HS}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运農場后四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运農場前四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_QS}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运農場前四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运農場双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_SM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运農場双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运農場双面" enabled="true">
              <stringProp name="filename">${Path}XY_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运農場前四" enabled="true">
              <stringProp name="filename">${Path}XY_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运農場后四" enabled="true">
              <stringProp name="filename">${Path}XY_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运農場正码" enabled="true">
              <stringProp name="filename">${Path}XY_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运農場连码" enabled="true">
              <stringProp name="filename">${Path}XY_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="重慶" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="重慶" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="953612766">
                <stringProp name="1136144138">重庆球五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="32100418">
                <stringProp name="1135907119">重庆双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="815053256">
                <stringProp name="1136029997">重庆整合</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-990460131">
                <stringProp name="1136161043">重庆番攤</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆球五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_CQ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">重庆球五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_CQ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">重庆双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆整合" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_CQ_ZH}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">重庆整合</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="重庆番攤" enabled="true">
              <boolProp name="IsRandomChoice">false</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-427324796">
                  <stringProp name="30058">番</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="58167282">
                  <stringProp name="27491">正</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="309998098">
                  <stringProp name="684825">兩面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1203492635">
                  <stringProp name="24565">念</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="650555120">
                  <stringProp name="35282">角</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1080537277">
                  <stringProp name="20013">中</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="番" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_F}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-番</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="正" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_Z}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-正</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="兩面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_T}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-兩面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="念" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_N}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-念</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="角" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_JW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-角</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="中" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_J}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-中</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆整合" enabled="true">
              <stringProp name="filename">${Path}CQ_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆双面" enabled="true">
              <stringProp name="filename">${Path}CQ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆球五" enabled="true">
              <stringProp name="filename">${Path}CQ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-番" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_F.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_F</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-正" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_Z.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_Z</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-兩面" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_T.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_T</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-念" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_N.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_N</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-角" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_JW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_JW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-中" enabled="true">
              <stringProp name="filename">${Path}CQ_FT_J.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_CQ_FT_J</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="廣東" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="廣東" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1882106946">
                <stringProp name="741062688">广东连码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-458203802">
                <stringProp name="740773179">广东正码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1429409852">
                <stringProp name="740579530">广东后四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1266977184">
                <stringProp name="740565611">广东前四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1518604205">
                <stringProp name="740594003">广东双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东连码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_LM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东连码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东正码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_ZM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东正码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东后四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_HS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东后四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东前四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东前四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东双面" enabled="true">
              <stringProp name="filename">${Path}GD_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东前四" enabled="true">
              <stringProp name="filename">${Path}GD_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东后四" enabled="true">
              <stringProp name="filename">${Path}GD_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东正码" enabled="true">
              <stringProp name="filename">${Path}GD_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东连码" enabled="true">
              <stringProp name="filename">${Path}GD_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_GD_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="北京賽車" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="北京" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-1047065119">
                <stringProp name="653706799">北京冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-19316630">
                <stringProp name="653726075">北京后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1579263630">
                <stringProp name="653712156">北京前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1587040879">
                <stringProp name="653713353">北京前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1509234693">
                <stringProp name="653742667">北京双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1532271758">
                <stringProp name="653996591">北京番攤</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="北京番攤" enabled="false">
              <boolProp name="IsRandomChoice">false</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-427324796">
                  <stringProp name="30058">番</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="58167282">
                  <stringProp name="27491">正</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="309998098">
                  <stringProp name="684825">兩面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1203492635">
                  <stringProp name="24565">念</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="650555120">
                  <stringProp name="35282">角</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1080537277">
                  <stringProp name="20013">中</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="番" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_F}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-番</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="正" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_Z}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-正</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="兩面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_T}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-兩面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="念" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_N}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-念</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="角" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_JW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-角</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="中" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_J}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-中</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-番" enabled="true">
                <stringProp name="filename">${Path}BJ_FT_F.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">bet_data_BJ_FT_F</stringProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
              </CSVDataSet>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-正" enabled="true">
                <stringProp name="filename">${Path}BJ_FT_Z.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">bet_data_BJ_FT_Z</stringProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
              </CSVDataSet>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-兩面" enabled="true">
                <stringProp name="filename">${Path}BJ_FT_T.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">bet_data_BJ_FT_T</stringProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
              </CSVDataSet>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-念" enabled="true">
                <stringProp name="filename">${Path}BJ_FT_N.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">bet_data_BJ_FT_N</stringProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
              </CSVDataSet>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-角" enabled="true">
                <stringProp name="filename">${Path}BJ_FT_JW.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">bet_data_BJ_FT_JW</stringProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
              </CSVDataSet>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-中" enabled="true">
                <stringProp name="filename">${Path}BJ_FT_J.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">bet_data_BJ_FT_J</stringProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京后五" enabled="true">
            <stringProp name="filename">${Path}BJ_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前五" enabled="true">
            <stringProp name="filename">${Path}BJ_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前十" enabled="true">
            <stringProp name="filename">${Path}BJ_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京双面" enabled="true">
            <stringProp name="filename">${Path}BJ_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京冠亚" enabled="true">
            <stringProp name="filename">${Path}BJ_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="幸運飛艇" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="幸運飛艇" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-460079509">
                <stringProp name="1830326809">幸運飛艇冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="544521373">
                <stringProp name="1830346085">幸運飛艇后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2143101633">
                <stringProp name="1830332166">幸運飛艇前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1023202876">
                <stringProp name="1830333363">幸運飛艇前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2073072696">
                <stringProp name="1830362677">幸運飛艇双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇冠亚" enabled="true">
            <stringProp name="filename">${Path}XYFT_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇后五" enabled="true">
            <stringProp name="filename">${Path}XYFT_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇前五" enabled="true">
            <stringProp name="filename">${Path}XYFT_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇前十" enabled="true">
            <stringProp name="filename">${Path}XYFT_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇双面" enabled="true">
            <stringProp name="filename">${Path}XYFT_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="英國賽車" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國賽車" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-387176275">
                <stringProp name="2115088481">英國賽車冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1977124819">
                <stringProp name="2115107757">英國賽車后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1520829960">
                <stringProp name="2115093838">英國賽車前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-927898732">
                <stringProp name="2115095035">英國賽車前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="269002321">
                <stringProp name="2115124349">英國賽車双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車冠亚" enabled="true">
            <stringProp name="filename">${Path}JSBJ_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車后五" enabled="true">
            <stringProp name="filename">${Path}JSBJ_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車前五" enabled="true">
            <stringProp name="filename">${Path}JSBJ_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車前十" enabled="true">
            <stringProp name="filename">${Path}JSBJ_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車双面" enabled="true">
            <stringProp name="filename">${Path}JSBJ_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="英國時時" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國時時" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="57669375">
                <stringProp name="1810012267">英國時時球五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="973343505">
                <stringProp name="1809775248">英國時時双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1248087712">
                <stringProp name="1809898126">英國時時整合</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時球五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSCQ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國時時球五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSCQ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國時時双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時整合" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSCQ_ZH}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國時時整合</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時球五" enabled="true">
              <stringProp name="filename">${Path}JSCQ_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSCQ_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時双面" enabled="true">
              <stringProp name="filename">${Path}JSCQ_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSCQ_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時整合" enabled="true">
              <stringProp name="filename">${Path}JSCQ_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSCQ_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="英國快樂" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國快樂" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="928836433">
                <stringProp name="1762815700">英國快樂连码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-185689867">
                <stringProp name="1762526191">英國快樂正码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1823776359">
                <stringProp name="1762332542">英國快樂后四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-995209946">
                <stringProp name="1762318623">英國快樂前四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1790371443">
                <stringProp name="1762347015">英國快樂双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂连码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_LM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂连码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂正码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_ZM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂正码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂后四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_HS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂后四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂前四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂前四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂双面" enabled="true">
              <stringProp name="filename">${Path}JSGD_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂正码" enabled="true">
              <stringProp name="filename">${Path}JSGD_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂后四" enabled="true">
              <stringProp name="filename">${Path}JSGD_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂前四" enabled="true">
              <stringProp name="filename">${Path}JSGD_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂连码" enabled="true">
              <stringProp name="filename">${Path}JSGD_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSGD_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="極速賽車75" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="極速賽車75" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1352491847">
                <stringProp name="822333711">極速賽車75冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1638770215">
                <stringProp name="822352987">極速賽車75后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1110054851">
                <stringProp name="822339068">極速賽車75前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="788621783">
                <stringProp name="822340265">極速賽車75前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1180083788">
                <stringProp name="822369579">極速賽車75双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75双面" enabled="true">
            <stringProp name="filename">${Path}JSSC75_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75前十" enabled="true">
            <stringProp name="filename">${Path}JSSC75_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75前五" enabled="true">
            <stringProp name="filename">${Path}JSSC75_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75后五" enabled="true">
            <stringProp name="filename">${Path}JSSC75_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75冠亚" enabled="true">
            <stringProp name="filename">${Path}JSSC75_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="極速時時75" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="極速時時75" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-645639244">
                <stringProp name="-560103335">極速時時75球五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1428609469">
                <stringProp name="-560340354">極速時時75双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2057771289">
                <stringProp name="-560217476">極速時時75整合</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75球五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSSC75_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速時時75球五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSSC75_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速時時75双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75整合" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSSC75_ZH}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速時時75整合</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75整合" enabled="true">
              <stringProp name="filename">${Path}JSSSC75_ZH.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSSC75_ZH</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75双面" enabled="true">
              <stringProp name="filename">${Path}JSSSC75_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSSC75_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75球五" enabled="true">
              <stringProp name="filename">${Path}JSSSC75_QW.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_JSSSC75_QW</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 投注2" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">123123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">kcard7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="defaultLotteryId" elementType="Argument">
              <stringProp name="Argument.name">defaultLotteryId</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1=重慶 2=北京 3=幸運 4=廣東</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="幸運" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1650095511">
                <stringProp name="757018171">幸运连码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1371877362">
                <stringProp name="756728662">幸运正码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1185780673">
                <stringProp name="756535013">幸运后四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1172404514">
                <stringProp name="756521094">幸运前四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1199689226">
                <stringProp name="756549486">幸运双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运连码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_LM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运连码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运正码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_ZM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运正码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运后四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_HS}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运后四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运前四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_QS}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运前四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸运双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XY_SM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸运双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运后四" enabled="true">
              <stringProp name="filename">${Path}XY_HS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_HS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运前四" enabled="true">
              <stringProp name="filename">${Path}XY_QS.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_QS</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运双面" enabled="true">
              <stringProp name="filename">${Path}XY_SM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_SM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运连码" enabled="true">
              <stringProp name="filename">${Path}XY_LM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_LM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运正码" enabled="true">
              <stringProp name="filename">${Path}XY_ZM.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">bet_data_XY_ZM</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="北京" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1152114827">
                <stringProp name="653706799">北京冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1170639063">
                <stringProp name="653726075">北京后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1157262904">
                <stringProp name="653712156">北京前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1158413221">
                <stringProp name="653713353">北京前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1186583975">
                <stringProp name="653742667">北京双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1430604939">
                <stringProp name="653996591">北京番攤</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="北京双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_BJ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">北京双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="北京番攤" enabled="true">
              <boolProp name="IsRandomChoice">false</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-427324796">
                  <stringProp name="30058">番</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="58167282">
                  <stringProp name="27491">正</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="309998098">
                  <stringProp name="684825">兩面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1203492635">
                  <stringProp name="24565">念</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="650555120">
                  <stringProp name="35282">角</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1080537277">
                  <stringProp name="20013">中</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="番" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_F}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-番</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="正" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_Z}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-正</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="兩面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_T}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-兩面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="念" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_N}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-念</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="角" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_JW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-角</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="中" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_BJ_FT_J}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">北京番攤-中</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="幸運飛艇" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-460079509">
                <stringProp name="1830326809">幸運飛艇冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="544521373">
                <stringProp name="1830346085">幸運飛艇后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2143101633">
                <stringProp name="1830332166">幸運飛艇前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1023202876">
                <stringProp name="1830333363">幸運飛艇前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2073072696">
                <stringProp name="1830362677">幸運飛艇双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="幸運飛艇双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_XYFT_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">幸運飛艇双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國賽車" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-387176275">
                <stringProp name="2115088481">英國賽車冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1977124819">
                <stringProp name="2115107757">英國賽車后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1520829960">
                <stringProp name="2115093838">英國賽車前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-927898732">
                <stringProp name="2115095035">英國賽車前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="269002321">
                <stringProp name="2115124349">英國賽車双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國賽車双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSBJ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國賽車双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="極速賽車75" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1352491847">
                <stringProp name="822333711">極速賽車75冠亚</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1638770215">
                <stringProp name="822352987">極速賽車75后五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1110054851">
                <stringProp name="822339068">極速賽車75前五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="788621783">
                <stringProp name="822340265">極速賽車75前十</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1180083788">
                <stringProp name="822369579">極速賽車75双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75冠亚" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_GY}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75冠亚</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75后五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_HW}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75后五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75前五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75前五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75前十" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75前十</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速賽車75双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSC75_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速賽車75双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="重慶" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="953612766">
                <stringProp name="1136144138">重庆球五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="32100418">
                <stringProp name="1135907119">重庆双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="815053256">
                <stringProp name="1136029997">重庆整合</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-990460131">
                <stringProp name="1136161043">重庆番攤</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆球五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_CQ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">重庆球五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_CQ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">重庆双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="重庆整合" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_CQ_ZH}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">重庆整合</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="重庆番攤" enabled="true">
              <boolProp name="IsRandomChoice">false</boolProp>
              <collectionProp name="Weights">
                <collectionProp name="-427324796">
                  <stringProp name="30058">番</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="58167282">
                  <stringProp name="27491">正</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="309998098">
                  <stringProp name="684825">兩面</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1203492635">
                  <stringProp name="24565">念</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="650555120">
                  <stringProp name="35282">角</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <collectionProp name="1080537277">
                  <stringProp name="20013">中</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
            </com.blazemeter.jmeter.control.WeightedSwitchController>
            <hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="番" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_F}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-番</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="正" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_Z}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-正</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="兩面" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_T}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-兩面</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="念" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_N}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-念</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="角" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_JW}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-角</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="中" enabled="true">
                <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="betParams" elementType="Argument">
                      <stringProp name="Argument.name">betParams</stringProp>
                      <stringProp name="Argument.value">${bet_data_CQ_FT_J}</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="lotteryId" elementType="Argument">
                      <stringProp name="Argument.name">lotteryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.desc">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="playname" elementType="Argument">
                      <stringProp name="Argument.name">playname</stringProp>
                      <stringProp name="Argument.value">重庆番攤-中</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </kg.apc.jmeter.control.ParameterizedController>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="764597751">Test Plan</stringProp>
                    <stringProp name="68931311">HOURS</stringProp>
                    <stringProp name="536752666">時時 API</stringProp>
                    <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Scope.variable">mymy</stringProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國時時" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="57669375">
                <stringProp name="1810012267">英國時時球五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="973343505">
                <stringProp name="1809775248">英國時時双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1248087712">
                <stringProp name="1809898126">英國時時整合</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時球五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSCQ_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國時時球五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSCQ_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國時時双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國時時整合" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSCQ_ZH}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國時時整合</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="極速時時75" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-645639244">
                <stringProp name="-560103335">極速時時75球五</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1428609469">
                <stringProp name="-560340354">極速時時75双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2057771289">
                <stringProp name="-560217476">極速時時75整合</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75球五" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSSC75_QW}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速時時75球五</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSSC75_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速時時75双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="極速時時75整合" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSSSC75_ZH}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">極速時時75整合</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1842184101">&quot;Status&quot;:1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="廣東" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1882106946">
                <stringProp name="741062688">广东连码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-458203802">
                <stringProp name="740773179">广东正码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1429409852">
                <stringProp name="740579530">广东后四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1266977184">
                <stringProp name="740565611">广东前四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1518604205">
                <stringProp name="740594003">广东双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东连码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_LM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东连码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东正码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_ZM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东正码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东后四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_HS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东后四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东前四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东前四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="广东双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_GD_SM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">广东双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="英國快樂" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="1853879280">
                <stringProp name="1762815700">英國快樂连码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1575661131">
                <stringProp name="1762526191">英國快樂正码</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1389564442">
                <stringProp name="1762332542">英國快樂后四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1376188283">
                <stringProp name="1762318623">英國快樂前四</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1403472995">
                <stringProp name="1762347015">英國快樂双面</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂连码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_LM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂连码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂正码" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_ZM}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂正码</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂后四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_HS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂后四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂前四" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_QS}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂前四</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="英國快樂双面" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_JSGD_SM}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">英國快樂双面</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="PC蛋蛋" enabled="true">
            <boolProp name="IsRandomChoice">true</boolProp>
            <collectionProp name="Weights">
              <collectionProp name="-2034073743">
                <stringProp name="-880660682">PC蛋蛋特碼</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-2130580724">
                <stringProp name="-880868965">PC蛋蛋大小</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="113360889">
                <stringProp name="-880881474">PC蛋蛋單雙</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1124185498">
                <stringProp name="-1533122422">PC蛋蛋極大小</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-857247215">
                <stringProp name="133842357">PC蛋蛋大單大雙小單小雙</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="456778285">
                <stringProp name="-880536957">PC蛋蛋色波</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-835238793">
                <stringProp name="-880461878">PC蛋蛋豹子</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-180343241">
                <stringProp name="-205679270">PC蛋蛋特碼包三</stringProp>
                <stringProp name="48625">100</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋特碼" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_number}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋特碼</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋大小" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_large}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋大小</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋單雙" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_single}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋單雙</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋極大小" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_Maxlarge}</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.desc">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋極大小</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋大單大雙小單小雙" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_bigsingle}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋大單大雙小單小雙</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋色波" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_colorpo}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋色波</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋豹子" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_baozi}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋豹子</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="PC蛋蛋特碼包三" enabled="true">
              <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="betParams" elementType="Argument">
                    <stringProp name="Argument.name">betParams</stringProp>
                    <stringProp name="Argument.value">${bet_data_PCegg_baosan}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lotteryId" elementType="Argument">
                    <stringProp name="Argument.name">lotteryId</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="playname" elementType="Argument">
                    <stringProp name="Argument.name">playname</stringProp>
                    <stringProp name="Argument.value">PC蛋蛋特碼包三</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </kg.apc.jmeter.control.ParameterizedController>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="764597751">Test Plan</stringProp>
                  <stringProp name="68931311">HOURS</stringProp>
                  <stringProp name="536752666">時時 API</stringProp>
                  <stringProp name="-1697804039">POST /Bet/DoBet</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-528836963">&quot;Status&quot;:1,&quot;Data&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Scope.variable">mymy</stringProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运双面" enabled="true">
            <stringProp name="filename">${Path}XY_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XY_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运前四" enabled="true">
            <stringProp name="filename">${Path}XY_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XY_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运后四" enabled="true">
            <stringProp name="filename">${Path}XY_HS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XY_HS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运正码" enabled="true">
            <stringProp name="filename">${Path}XY_ZM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XY_ZM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸运连码" enabled="true">
            <stringProp name="filename">${Path}XY_LM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XY_LM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆整合" enabled="true">
            <stringProp name="filename">${Path}CQ_ZH.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_ZH</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆双面" enabled="true">
            <stringProp name="filename">${Path}CQ_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆球五" enabled="true">
            <stringProp name="filename">${Path}CQ_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-番" enabled="true">
            <stringProp name="filename">${Path}CQ_FT_F.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_FT_F</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-正" enabled="true">
            <stringProp name="filename">${Path}CQ_FT_Z.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_FT_Z</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-兩面" enabled="true">
            <stringProp name="filename">${Path}CQ_FT_T.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_FT_T</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-念" enabled="true">
            <stringProp name="filename">${Path}CQ_FT_N.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_FT_N</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-角" enabled="true">
            <stringProp name="filename">${Path}CQ_FT_JW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_FT_JW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 重庆番攤-中" enabled="true">
            <stringProp name="filename">${Path}CQ_FT_J.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_CQ_FT_J</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時球五" enabled="true">
            <stringProp name="filename">${Path}JSCQ_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSCQ_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時双面" enabled="true">
            <stringProp name="filename">${Path}JSCQ_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSCQ_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國時時整合" enabled="true">
            <stringProp name="filename">${Path}JSCQ_ZH.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSCQ_ZH</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75整合" enabled="true">
            <stringProp name="filename">${Path}JSSSC75_ZH.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSSC75_ZH</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75双面" enabled="true">
            <stringProp name="filename">${Path}JSSSC75_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSSC75_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速時時75球五" enabled="true">
            <stringProp name="filename">${Path}JSSSC75_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSSC75_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东双面" enabled="true">
            <stringProp name="filename">${Path}GD_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_GD_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东前四" enabled="true">
            <stringProp name="filename">${Path}GD_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_GD_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东后四" enabled="true">
            <stringProp name="filename">${Path}GD_HS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_GD_HS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东正码" enabled="true">
            <stringProp name="filename">${Path}GD_ZM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_GD_ZM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 广东连码" enabled="true">
            <stringProp name="filename">${Path}GD_LM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_GD_LM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂连码" enabled="true">
            <stringProp name="filename">${Path}JSGD_LM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSGD_LM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂正码" enabled="true">
            <stringProp name="filename">${Path}JSGD_ZM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSGD_ZM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂后四" enabled="true">
            <stringProp name="filename">${Path}JSGD_HS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSGD_HS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂前四" enabled="true">
            <stringProp name="filename">${Path}JSGD_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSGD_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國快樂双面" enabled="true">
            <stringProp name="filename">${Path}JSGD_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSGD_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京双面" enabled="true">
            <stringProp name="filename">${Path}BJ_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前十" enabled="true">
            <stringProp name="filename">${Path}BJ_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京前五" enabled="true">
            <stringProp name="filename">${Path}BJ_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京后五" enabled="true">
            <stringProp name="filename">${Path}BJ_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京冠亚" enabled="true">
            <stringProp name="filename">${Path}BJ_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇冠亚" enabled="true">
            <stringProp name="filename">${Path}XYFT_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇后五" enabled="true">
            <stringProp name="filename">${Path}XYFT_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇前五" enabled="true">
            <stringProp name="filename">${Path}XYFT_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇前十" enabled="true">
            <stringProp name="filename">${Path}XYFT_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 幸運飛艇双面" enabled="true">
            <stringProp name="filename">${Path}XYFT_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_XYFT_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車冠亚" enabled="true">
            <stringProp name="filename">${Path}JSBJ_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車后五" enabled="true">
            <stringProp name="filename">${Path}JSBJ_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車前五" enabled="true">
            <stringProp name="filename">${Path}JSBJ_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車前十" enabled="true">
            <stringProp name="filename">${Path}JSBJ_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 英國賽車双面" enabled="true">
            <stringProp name="filename">${Path}JSBJ_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSBJ_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75双面" enabled="true">
            <stringProp name="filename">${Path}JSSC75_SM.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_SM</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75前十" enabled="true">
            <stringProp name="filename">${Path}JSSC75_QS.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_QS</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75前五" enabled="true">
            <stringProp name="filename">${Path}JSSC75_QW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_QW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75后五" enabled="true">
            <stringProp name="filename">${Path}JSSC75_HW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_HW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 極速賽車75冠亚" enabled="true">
            <stringProp name="filename">${Path}JSSC75_GY.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_JSSC75_GY</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-番" enabled="true">
            <stringProp name="filename">${Path}BJ_FT_F.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_FT_F</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-角" enabled="true">
            <stringProp name="filename">${Path}BJ_FT_JW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_FT_JW</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-念" enabled="true">
            <stringProp name="filename">${Path}BJ_FT_N.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_FT_N</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-兩面" enabled="true">
            <stringProp name="filename">${Path}BJ_FT_T.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_FT_T</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-正" enabled="true">
            <stringProp name="filename">${Path}BJ_FT_Z.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_FT_Z</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data 北京番攤-番" enabled="true">
            <stringProp name="filename">${Path}BJ_FT_F.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_BJ_FT_F</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋特碼" enabled="true">
            <stringProp name="filename">${Path}PCegg_number.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_number</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋大小" enabled="true">
            <stringProp name="filename">${Path}PCegg_large.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_large</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋單雙" enabled="true">
            <stringProp name="filename">${Path}PCegg_single.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_single</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋極大小" enabled="true">
            <stringProp name="filename">${Path}PCegg_Maxlarge.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_Maxlarge</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋大單大雙小單小雙" enabled="true">
            <stringProp name="filename">${Path}PCegg_bigsingle.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_bigsingle</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋色波" enabled="true">
            <stringProp name="filename">${Path}PCegg_colorpo.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_colorpo</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋豹子" enabled="true">
            <stringProp name="filename">${Path}PCegg_baozi.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_baozi</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data PC蛋蛋特碼包三" enabled="true">
            <stringProp name="filename">${Path}PCegg_baosan.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">bet_data_PCegg_baosan</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 輪詢A" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">123123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">kcard7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="defaultLotteryId" elementType="Argument">
              <stringProp name="Argument.name">defaultLotteryId</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1=重慶 2=北京 3=幸運 4=廣東</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="簡易控制器" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Bet/GetBetPageInit/" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="536752666">時時 API</stringProp>
              <stringProp name="1228355261">GET /Bet/GetBetPageInit</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 輪詢B" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">123123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">kcard7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="defaultLotteryId" elementType="Argument">
              <stringProp name="Argument.name">defaultLotteryId</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1=重慶 2=北京 3=幸運 4=廣東</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="簡易控制器" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Member/GetMemberInfo" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="536752666">時時 API</stringProp>
              <stringProp name="-1177409298">GET /Member/GetMemberInfo</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - 時時 前台 輪詢C" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
          <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SafeCode" elementType="Argument">
              <stringProp name="Argument.name">SafeCode</stringProp>
              <stringProp name="Argument.value">123123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isbackend" elementType="Argument">
              <stringProp name="Argument.name">isbackend</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Account" elementType="Argument">
              <stringProp name="Argument.name">Account</stringProp>
              <stringProp name="Argument.value">kcard7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">Aa123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="defaultLotteryId" elementType="Argument">
              <stringProp name="Argument.name">defaultLotteryId</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1=重慶 2=北京 3=幸運 4=廣東</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="簡易控制器" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GET /Bet/GetBettingSuccess" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="536752666">時時 API</stringProp>
              <stringProp name="-1124695529">GET /Bet/GetBettingSuccess</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="======================================================" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment 錄製紀錄_前台_login" enabled="false"/>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15 /Navigation/NavigateByTarget" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SafeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SafeCode</stringProp>
                  <stringProp name="Argument.value">123123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">30000</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Navigation/NavigateByTarget</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:30000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16 /Navigation/Speed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">123123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isbackend" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isbackend</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">30000</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Navigation/Speed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:30000/Navigation/NavigateByTarget</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18 /Url/GetUrlList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">123123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isbackend" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isbackend</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217705922</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">30000</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Url/GetUrlList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:30000/Navigation/Speed?token=123123&amp;isbackend=1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20 /Url/GetNetSpeed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">callback0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217705923</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Url/GetNetSpeed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:30000/Navigation/Speed?token=123123&amp;isbackend=1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21 /Member/Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217705938</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">123123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/Login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:30000/Navigation/Speed?token=123123&amp;isbackend=1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31 /Member/DoLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Account</stringProp>
                  <stringProp name="Argument.value">kcard7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                  <stringProp name="Argument.value">Aa123456</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">123123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Member/DoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/Member/Login?_=1522217705938&amp;token=123123</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37 /Member/GetSystemName" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetSystemName</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/All/Agreement.html?s=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38 /Notice/GetNoticeData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Notice/GetNoticeData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/All/Agreement.html?s=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40 /Member/AcceptAgreement" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/AcceptAgreement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/All/Agreement.html?s=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49 /Member/GetMemberInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217729271</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetMemberInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522217728538</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51 /Bet/GetBetPageInit/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="statNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statNo</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="marketTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">marketTypes</stringProp>
                  <stringProp name="Argument.valuestringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217729272</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBetPageInit/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522217728538</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48 /Bet/GetBettingSuccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217729270</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522217728538</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52 /Notice/GetNoticeData/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522217729273</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Notice/GetNoticeData/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522217728538</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment 錄製紀錄_後台_login" enabled="false"/>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="164 /Navigation/NavigateByTarget" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SafeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SafeCode</stringProp>
                  <stringProp name="Argument.value">999994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">20000</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Navigation/NavigateByTarget</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="166 /Navigation/Speed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">999994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isbackend" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isbackend</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">20000</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Navigation/Speed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="167 /Url/GetUrlList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">999994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isbackend" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isbackend</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117307118</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">20000</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Url/GetUrlList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/Navigation/Speed?token=999994&amp;isbackend=3</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="168 /Url/GetNetSpeed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">callback0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117307119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Url/GetNetSpeed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="169 /(S(uzzn30e2wimjvlppuutbfpfg))/Url/GetNetSpeed" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">callback0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117307119</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(uzzn30e2wimjvlppuutbfpfg))/Url/GetNetSpeed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="165 /success.txt" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="170 /Member/Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117307136</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">999994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/Login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="172 /(S(43ob2vlxjijbrsonffqizvky))/Member/Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117307136</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">999994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/Member/Login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:20000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="171 /success.txt" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173 /(S(43ob2vlxjijbrsonffqizvky))/Member/DoLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Account</stringProp>
                  <stringProp name="Argument.value">carl1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                  <stringProp name="Argument.value">Zero0000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">999994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/Member/DoLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/Member/Login?_=1522117307136&amp;token=999994</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174 /(S(43ob2vlxjijbrsonffqizvky))/App/Index" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117316314</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/App/Index</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/Member/Login?_=1522117307136&amp;token=999994</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="176 /(S(43ob2vlxjijbrsonffqizvky))/Member/GetMemberOnline" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117316376</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/Member/GetMemberOnline</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/App/Index?_=1522117316314</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="178 /(S(43ob2vlxjijbrsonffqizvky))/NoticeSetting/GetNoticeData/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117316378</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/NoticeSetting/GetNoticeData/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/App/Index?_=1522117316314</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="177 /(S(43ob2vlxjijbrsonffqizvky))/OperateLog/GetOddsChangeMarquee/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117316377</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/OperateLog/GetOddsChangeMarquee/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/App/Index?_=1522117316314</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175 /success.txt" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="179 /(S(43ob2vlxjijbrsonffqizvky))/Monitor/GetPageInit" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="marketTypeIds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">marketTypeIds</stringProp>
                  <stringProp name="Argument.value">%5B%224201%22%2C%224002%22%2C%224003%22%2C%224006%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117316379</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/Monitor/GetPageInit</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/App/Index?_=1522117316314</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180 /(S(43ob2vlxjijbrsonffqizvky))/Member/GetMemberOnline" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522117316380</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">23001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/(S(43ob2vlxjijbrsonffqizvky))/Member/GetMemberOnline</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:23001/(S(43ob2vlxjijbrsonffqizvky))/App/Index?_=1522117316314</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment 錄製紀錄_前台_bet" enabled="false"/>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="67 /Bet/GetBettingSuccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="70 /Member/GetMemberInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197384</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetMemberInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68 /Notice/GetNoticeData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLimit</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197383</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Notice/GetNoticeData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69 /Bet/GetBetPageRefresh/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="statNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statNo</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="marketTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">marketTypes</stringProp>
                  <stringProp name="Argument.valuestringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197382</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBetPageRefresh/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="-------------------" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="74 /Notice/GetNoticeData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isLimit</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197387</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Notice/GetNoticeData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="71 /Bet/DoBet/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="betParams" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">betParams</stringProp>
                  <stringProp name="Argument.value">{&quot;BetItems&quot;:[{&quot;BetNo&quot;:&quot;400301&quot;,&quot;Odds&quot;:&quot;1.9609&quot;,&quot;BetMoney&quot;:2000}],&quot;LotteryId&quot;:4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Bet/DoBet/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="73 /Bet/GetBetPageRefresh/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="statNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statNo</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="marketTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">marketTypes</stringProp>
                  <stringProp name="Argument.value">[&quot;4002&quot;,&quot;4003&quot;,&quot;4006&quot;,&quot;4012&quot;,&quot;4013&quot;,&quot;4016&quot;,&quot;4017&quot;,&quot;4014&quot;,&quot;4022&quot;,&quot;4023&quot;,&quot;4026&quot;,&quot;4027&quot;,&quot;4024&quot;,&quot;4032&quot;,&quot;4033&quot;,&quot;4036&quot;,&quot;4037&quot;,&quot;4034&quot;,&quot;4042&quot;,&quot;4043&quot;,&quot;4046&quot;,&quot;4047&quot;,&quot;4044&quot;,&quot;4052&quot;,&quot;4053&quot;,&quot;4056&quot;,&quot;4057&quot;,&quot;4062&quot;,&quot;4063&quot;,&quot;4066&quot;,&quot;4067&quot;,&quot;4072&quot;,&quot;4073&quot;,&quot;4076&quot;,&quot;4077&quot;,&quot;4082&quot;,&quot;4083&quot;,&quot;4086&quot;,&quot;4087&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197386</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBetPageRefresh/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="72 /Bet/GetBettingSuccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197385</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="76 /Member/GetMemberInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197389</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Member/GetMemberInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="75 /Bet/GetBettingSuccess" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lotteryid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lotteryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lotteryId</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1522220197388</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.50.161</stringProp>
            <stringProp name="HTTPSampler.port">33001</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Bet/GetBettingSuccess</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.50.161:33001/App/Index?_=1522220197182</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="======================================================" enabled="false"/>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1528253519000</longProp>
        <longProp name="ThreadGroup.end_time">1528253519000</longProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="-1298854377">Test Fragment - 時時 前台 Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1528253519000</longProp>
        <longProp name="ThreadGroup.end_time">1528253519000</longProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="-810361269">Test Fragment - 時時 前台stress Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1163619951">
            <stringProp name="49586">200</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="1722">60</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="迴圈控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="536752666">時時 API</stringProp>
            <stringProp name="67707333">GET /</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Parallel Controller" enabled="false">
          <boolProp name="PARENT_SAMPLE">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="2072877335">Test Fragment - 時時 前台 輪詢A</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="2072877336">Test Fragment - 時時 前台 輪詢B</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="2072877337">Test Fragment - 時時 前台 輪詢C</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">20</stringProp>
        <stringProp name="Start users count burst">20</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">200</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">3600</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="bzm - Parallel Controller" enabled="false">
          <boolProp name="PARENT_SAMPLE">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="2072877335">Test Fragment - 時時 前台 輪詢A</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="2072877336">Test Fragment - 時時 前台 輪詢B</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="2072877337">Test Fragment - 時時 前台 輪詢C</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="幸運農場" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="重慶" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="1182025">重慶</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="廣東" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="779502">廣東</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="北京賽車" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="654194338">北京賽車</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="幸運飛艇" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="757210335">幸運飛艇</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="英國賽車" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="1021193511">英國賽車</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="英國時時" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="1020875770">英國時時</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="英國快樂" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="1020826417">英國快樂</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="極速賽車75" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="631021909">極速賽車75</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="極速時時75" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${Total}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">5</stringProp>
        <stringProp name="Start users count burst">5</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">50</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">${TIme}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="1451978981">Test Fragment - 時時 前台 投注</stringProp>
            <stringProp name="325672808">極速時時75</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${F_IP}</stringProp>
        <stringProp name="HTTPSampler.port">${F_Port}</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">20</stringProp>
        <stringProp name="RampUp">1</stringProp>
        <stringProp name="Steps">10</stringProp>
        <stringProp name="Hold">60</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${Total}</stringProp>
        <stringProp name="RampUp">60</stringProp>
        <stringProp name="Steps">10</stringProp>
        <stringProp name="Hold">${Time}</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="68931311">HOURS</stringProp>
              <stringProp name="434674511">Test Fragment - 時時 前台 stress Login</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="68931311">HOURS</stringProp>
            <stringProp name="2061675501">Test Fragment - 時時 前台 投注2</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="彙整報告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
